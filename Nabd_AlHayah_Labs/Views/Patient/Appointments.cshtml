@model Nabd_AlHayah_Labs.ViewModels.AppointmentViewModel

<div class="app-wrapper">
    <div class="app-content pt-3 p-md-3 p-lg-4">
        <div class="container-xl">

            <!-- Header -->
            <div class="d-flex align-items-center justify-content-between mb-4">
                <a asp-action="Index" class="btn app-btn-light"><i class="fas fa-arrow-left me-1"></i> Back to Patients</a>
                <h2 class="text-center flex-grow-1 mb-0 fw-bold">@Model.Patient.FullNameEn (@Model.Patient.FullNameAr)</h2>
                <div style="width: 120px;"></div>
            </div>

            <!-- Add Appointment -->
            <div class="app-card shadow-sm rounded-4 p-3 mb-4 bg-white">
                <h5>Add New Appointment</h5>
                <form asp-action="CreateAppointment" method="post">
                    <input type="hidden" name="Patient.PatientId" value="@Model.Patient.PatientId" />

                    <div class="row g-3">

                        <!-- Date & Time -->
                        <div class="col-md-6">
                            <label class="form-label">Date & Time</label>
                            <input type="datetime-local" name="AppointmentDate" class="form-control"
                                   value="@Model.AppointmentDate == default ? DateTime.Now.ToString(" yyyy-MM-ddTHH:mm") : Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")" required />
                        </div>

                        <!-- Notes -->
                        <div class="col-md-6">
                            <label class="form-label">Notes</label>
                            <input type="text" name="Notes" class="form-control" placeholder="Notes" value="@Model.Notes" />
                        </div>

                        <!-- Appointment Type -->
                        <div class="col-md-6">
                            <label class="form-label">Appointment Type</label>
                            <select name="AppointmentTypeId" class="form-select" id="appointmentType">
                                @foreach (var type in Model.AppointmentTypes)
                                {
                                    <option value="@type.Id" selected="@(type.Id == Model.AppointmentTypeId ? "selected" : null)">
                                        @type.Name
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Select Packages -->
                        <div class="col-md-6">
                            <label class="form-label">Select Packages</label>
                            <select name="SelectedPackageIds" class="form-select" multiple>
                                @foreach (var pkg in Model.Packages)
                                {
                                    <option value="@pkg.Id" selected="@(Model.SelectedPackageIds.Contains(pkg.Id) ? "selected" : null)">
                                        @pkg.Name
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Select Tests -->
                        <div class="col-md-6">
                            <label class="form-label">Select Tests</label>
                            <select name="SelectedTestIds" class="form-select" multiple>
                                @foreach (var test in Model.Tests)
                                {
                                    <option value="@test.Id" selected="@(Model.SelectedTestIds.Contains(test.Id) ? "selected" : null)">
                                        @test.Name
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Home Sampling Fields -->
                        <div id="homeFields" style="display:none; flex-wrap: wrap;">
                            <div class="col-md-6">
                                <label class="form-label">Address (AR)</label>
                                <input type="text" name="AddressAr" class="form-control" value="@Model.AddressAr" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Address (EN)</label>
                                <input type="text" name="AddressEn" class="form-control" value="@Model.AddressEn" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">City (AR)</label>
                                <input type="text" name="CityAr" class="form-control" value="@Model.CityAr" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">City (EN)</label>
                                <input type="text" name="CityEn" class="form-control" value="@Model.CityEn" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Technician Name</label>
                                <input type="text" name="TechnicianName" class="form-control" value="@Model.TechnicianName" />
                            </div>
                            <div class="col-md-6 form-check mt-4">
                                <input type="checkbox" name="IsForAnotherPerson" class="form-check-input" id="isForAnotherPerson" @(Model.IsForAnotherPerson ? "checked" : null) />
                                <label class="form-check-label" for="isForAnotherPerson">Is For Another Person?</label>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="col-12">
                            <button type="submit" class="btn app-btn-primary"><i class="fas fa-plus me-1"></i> Add Appointment</button>
                        </div>

                    </div>
                </form>
            </div>

            <!-- Appointments Table -->
            <!-- Appointments Table -->
            @if (Model.Appointments != null && Model.Appointments.Any())
            {
                <div class="app-card app-card-orders-table shadow-sm mb-5">
                    <div class="app-card-body">
                        <div class="table-responsive">
                            <table class="table app-table-hover mb-0 text-left">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Date & Time</th>
                                        <th>Notes</th>
                                        <th>Packages</th>
                                        <th>Tests</th>
                                        <th>Type(AR/EN)</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var appt in Model.Appointments)
                                    {
                                        <tr>
                                            <td>@appt.AppointmentId</td>
                                            <td>@appt.AppointmentDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>@appt.Notes</td>
                                            <td>@string.Join(", ", appt.AppointmentPackages.Select(p => p.Package.PackageNameEn))</td>
                                            <td>@string.Join(", ", appt.AppointmentTests.Select(t => t.Test.TestNameEn))</td>
                                            <td>@appt.AppointmentType?.CodeDescEn / @appt.AppointmentType?.CodeDescAr</td>

                                            <!-- الحالة Badge عربي / إنجليزي -->
                                            <td>
                                                @{
                                                    string statusClass = "";
                                                    string statusText = appt.Status?.CodeDescEn ?? "";
                                                    switch (appt.Status?.CodeDescEn)
                                                    {
                                                        case "Pending":
                                                            statusClass = "bg-warning text-dark";
                                                            statusText = "Pending / قيد الانتظار";
                                                            break;
                                                        case "Canceled":
                                                            statusClass = "bg-danger text-white";
                                                            statusText = "Canceled / ملغي";
                                                            break;
                                                        case "Confirmed":
                                                            statusClass = "bg-success text-white";
                                                            statusText = "Confirmed / مؤكد";
                                                            break;
                                                        default:
                                                            statusClass = "bg-secondary text-white";
                                                            statusText = statusText;
                                                            break;
                                                    }
                                                }
                                                <span class="badge @statusClass px-2 py-1">@statusText</span>
                                            </td>

                                            <!-- الأزرار -->
                                            <td>
                                                <!-- Edit Appointment -->
                                                <a asp-action="EditAppointment" asp-route-id="@appt.AppointmentId" class="btn-sm app-btn-warning me-1" title="Edit / تعديل">
                                                    <i class="fas fa-pen-to-square me-1"></i>
                                                </a>

                                                <!-- Appointment Details -->
                                                <a asp-action="AppointmentDetails" asp-route-appointmentId="@appt.AppointmentId" class="btn-sm app-btn-info me-1" title="Details / التفاصيل">
                                                    <i class="fa-solid fa-eye me-1"></i>
                                                </a>

                                                <!-- Delete Appointment -->
                                                <a href="javascript:void(0);" class="btn-sm app-btn-danger" onclick="confirmDelete(@appt.AppointmentId)" title="Delete / حذف">
                                                    <i class="fas fa-trash me-1"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="app-card shadow-sm mb-4 p-4 text-center">
                    <h5 class="text-muted mb-0">No appointments yet / لا يوجد مواعيد</h5>
                </div>
            }

        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const appointmentType = document.getElementById('appointmentType');
        const homeFields = document.getElementById('homeFields');

        function toggleHomeFields() {
            if (parseInt(appointmentType.value) === 10) {
                homeFields.style.display = 'flex';
            } else {
                homeFields.style.display = 'none';
            }
        }

        appointmentType.addEventListener('change', toggleHomeFields);
        toggleHomeFields(); // عند تحميل الصفحة

        function confirmDelete(appointmentId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("DeleteAppointmen", "Patient")?appointmentId=' + appointmentId + '&patientId=@Model.Patient.PatientId';
                }
            });
        }

        $(document).ready(function () {
            $('#Appointments').DataTable();
        });
    </script>

   
}
